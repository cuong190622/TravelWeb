@model IEnumerable<TravelWeb.Models.DTO.BookingTypeHtDTO>
@{
    ViewBag.Title = "ShowWating";
    Layout = "~/Views/Managerht/_LayoutManager.cshtml";
}


    <h2>ShowWating</h2>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#myInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#myTable tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>

    <div>

        <input id="myInput" type="text" placeholder="Search..">
        <br><br>
        <table class="table table-hover">
            <thead class="thead-dark">
                <tr>

                    <th scope="col">@Html.DisplayNameFor(model => model.CustomerName)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.CustomerAdress)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.CustomerPhone)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.BookingFrom)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.BookingTo)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.NumberOfMember)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.Types)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.NumberRoomBook)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.Statuses)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.TotalPrice)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.HotelName)</th>
                    <th scope="col">&nbsp;</th>
                    <th scope="col">&nbsp;</th>
                    <th scope="col">&nbsp;</th>
                </tr>
            </thead>
            <tbody id="myTable">
                @foreach (var c in Model)
                {
                <tr class="Search">

                    <td>@Html.DisplayFor(model => c.CustomerName)</td>
                    <td>@Html.DisplayFor(model => c.CustomerAdress)</td>
                    <td>@Html.DisplayFor(model => c.CustomerPhone)</td>
                    <td>@Html.DisplayFor(model => c.BookingFrom)</td>
                    <td>@Html.DisplayFor(model => c.BookingTo)</td>
                    <td>@Html.DisplayFor(model => c.NumberOfMember)</td>
                    <td>@Html.DisplayFor(model => c.Types)</td>
                    <td>@Html.DisplayFor(model => c.NumberRoomBook)</td>
                    <td>@Html.DisplayFor(model => c.Statuses)</td>
                    <td>@c.TotalPrice.ToString()</td>
                    <td>@Html.DisplayFor(model => c.HotelName)</td>


                    <td>
                        <a type="button" class="btn btn-success btn-sm"
                           href="@Url.Action("Confirm", new {id = c.Id})">Checkin</a>
                    </td>
                    <td>
                        <a type="button" class="btn btn-success btn-sm"
                           href="@Url.Action("CheckinLate", new {id = c.Id})">Late</a>
                    </td>

                </tr>
                }
            </tbody>
        </table>


    </div>

